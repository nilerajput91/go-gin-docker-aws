version: "3.5"

services:
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana-storage:/var/lib/grafana

  golang:
    build:
      context: ./
      dockerfile: Dockerfile
    container_name: golang
    restart: always
    ports:
      - "8113:8113"
    depends_on:
      - postgres
    env_file:
     - ./database.env
    volumes:
      - ./database.env:/app/src/database.env

  prometheus:
    container_name: prometheus
    image: prom/prometheus:v2.26.0
    volumes:
      - ./src/prometheus:/etc/prometheus
      - prometheus_data:/src/prometheus/data
    command:
      - "--config.file=/etc/prometheus/prometheus.yaml"
      - "--storage.tsdb.path=/prometheus"
      - "--web.console.libraries=/usr/share/prometheus/console_libraries"
      - "--web.console.templates=/usr/share/prometheus/consoles"
    ports:
      - "9090:9090"
    restart: always

  postgres:
    image: postgres:latest
    container_name: postgres
    env_file:
      - ./postgres.env
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
   
volumes:
  grafana-storage:
  prometheus_data:
  postgres_data:
